{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "mysgatDatafactoryDemo"
		},
		"HDInsightcluster_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'HDInsightcluster'"
		},
		"HDInsightcluster_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "andelaguru"
		},
		"Event_Based_Trigger_properties_typeProperties_scope": {
			"type": "string",
			"defaultValue": "/subscriptions/eca238a7-3dd0-4613-a4e3-0cbe76442e4c/resourceGroups/demotrainingRG/providers/Microsoft.Storage/storageAccounts/demostorageaccountsample"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/HDInsightcluster')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "HDInsight",
				"typeProperties": {
					"clusterUri": "https://SGAT-SPARK-CLUSTER.azurehdinsight.net",
					"userName": "[parameters('HDInsightcluster_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('HDInsightcluster_password')]"
					},
					"isEspEnabled": false,
					"linkedServiceName": {
						"referenceName": "sparkclusterdemofileparameters",
						"type": "LinkedServiceReference"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/sparkclusterdemofileparameters')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "sparkclusterdemofileparameters",
					"type": "LinkedServiceReference"
				},
				"folder": {
					"name": "sparkclusterdemo"
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobStorageLocation",
						"fileName": "input_data_spark_Location.txt",
						"container": "sparkdemoiofiles"
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": [
					{
						"name": "inputFilelocation",
						"type": "String"
					},
					{
						"name": "outputfilelication",
						"type": "String"
					}
				]
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/CopyPipeline_3lh')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Copy_3lh",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "myadfdemo1container1/Demo1/Sales.csv"
							},
							{
								"name": "Destination",
								"value": "dbo.Product"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"validateDataConsistency": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ProductModelID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ProductModelID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SellStartDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SellStartDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SellEndDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SellEndDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Color",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Color",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StandardCost",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "StandardCost",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ListPrice",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ListPrice",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Size",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Size",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Weight",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Weight",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ProductCategoryID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ProductCategoryID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ProductID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ProductID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ProductNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ProductNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_3lh",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_3lh",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-03-27T03:06:37Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy_Blob_to_DBase')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This is to copy blob file to database",
				"activities": [
					{
						"name": "m_load_blob_to_database123",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ProductCategoryID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ProductCategoryID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "ParentProductCategoryID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ParentProductCategoryID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SalesCategory_dataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Salescategory_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Blob_to_Database"
				},
				"annotations": [],
				"lastPublishTime": "2021-03-27T04:06:42Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Copy_blob_to_DB1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "Copy file to database",
				"activities": [
					{
						"name": "Copy_2nl",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [
							{
								"name": "Source",
								"value": "myadfdemo1container1/Demo1/"
							},
							{
								"name": "Destination",
								"value": "dbo.Product"
							}
						],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"wildcardFileName": "*",
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings",
									"skipLineCount": 0
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"validateDataConsistency": false
						},
						"inputs": [
							{
								"referenceName": "SourceDataset_2nl",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "DestinationDataset_2nl",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"annotations": [],
				"lastPublishTime": "2021-03-27T02:50:47Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Event_based_trigger_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "This is to copy blob file to database",
				"activities": [
					{
						"name": "m_event_based_data_load",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink"
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ProductID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ProductID",
											"type": "Int32",
											"physicalType": "int"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ProductNumber",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ProductNumber",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Color",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Color",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "StandardCost",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "StandardCost",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ListPrice",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ListPrice",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "Size",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Size",
											"type": "String",
											"physicalType": "nvarchar"
										}
									},
									{
										"source": {
											"name": "Weight",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "Weight",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ProductCategoryID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ProductCategoryID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ProductModelID",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ProductModelID",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SellStartDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SellStartDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "SellEndDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "SellEndDate",
											"type": "String",
											"physicalType": "varchar"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "String",
											"physicalType": "String"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "String",
											"physicalType": "varchar"
										}
									}
								],
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SRC_Eventbasedtrigger",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "TGT_Event_BASED_DATALOAD",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Event_Based_Trigger"
				},
				"annotations": [],
				"lastPublishTime": "2021-03-27T04:06:42Z"
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/HDInsightClusterPipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "HDInstight-Hive",
						"type": "HDInsightHive",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"scriptPath": "hdinsightcluster/scripts/partitionweblogs.hql",
							"defines": {
								"inputfilelocation": "wasbs://hdinsightcluster@myadfdemo1.blob.core.windows.net/input_folder/input.log",
								"outputfilelication": "wasbs://hdinsightcluster@myadfdemo1.blob.core.windows.net/Output/weblogstransformed"
							},
							"scriptLinkedService": {
								"referenceName": "AzureBlobStorage1",
								"type": "LinkedServiceReference"
							}
						},
						"linkedServiceName": {
							"referenceName": "HDInsightcluster",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "HDInsight_cluster_pipelines"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/HDInsightcluster')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Orchestrate_DATA')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Orchestration_pipeline",
						"description": "This flow is to orchestrate the data ",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "SRCSALES",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"itemName",
								"itemType",
								"lastModified",
								"size",
								"columnCount",
								"exists",
								"structure"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "orchestrate_stored_procedure",
						"type": "SqlServerStoredProcedure",
						"dependsOn": [
							{
								"activity": "Orchestration_pipeline",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"storedProcedureName": "[[dbo].[STORE_FILEMETADATA]",
							"storedProcedureParameters": {
								"FileName": {
									"value": {
										"value": "@activity('Orchestration_pipeline').output.itemName",
										"type": "Expression"
									},
									"type": "String"
								},
								"LastModifiedDate": {
									"value": {
										"value": "@activity('Orchestration_pipeline').output.lastModified",
										"type": "Expression"
									},
									"type": "String"
								},
								"RecInsertDate": {
									"value": {
										"value": "@utcnow()",
										"type": "Expression"
									},
									"type": "String"
								}
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureSqlDatabase1",
							"type": "LinkedServiceReference"
						}
					}
				],
				"folder": {
					"name": "ORCHESTRATE_DATAPIPELINES"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/OrchestrationPart2-controls')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Orchestrate-part2",
						"type": "GetMetadata",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataset": {
								"referenceName": "SRC_ORCHESPART2_CONTROLS",
								"type": "DatasetReference",
								"parameters": {}
							},
							"fieldList": [
								"childItems",
								"itemName",
								"itemType"
							],
							"storeSettings": {
								"type": "AzureBlobStorageReadSettings",
								"recursive": true,
								"enablePartitionDiscovery": false
							},
							"formatSettings": {
								"type": "DelimitedTextReadSettings"
							}
						}
					},
					{
						"name": "FLT_SALES_FILE_ORCHESPART2",
						"type": "Filter",
						"dependsOn": [
							{
								"activity": "Orchestrate-part2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('Orchestrate-part2').output.childItems",
								"type": "Expression"
							},
							"condition": {
								"value": "@startswith( item().name ,'Sales')\n",
								"type": "Expression"
							}
						}
					},
					{
						"name": "FORLOOP-READ-FILES",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "FLT_SALES_FILE_ORCHESPART2",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('FLT_SALES_FILE_ORCHESPART2').output.Value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "orchest-part2-foreach-storeproce",
									"type": "SqlServerStoredProcedure",
									"dependsOn": [],
									"policy": {
										"timeout": "7.00:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"storedProcedureName": "[[dbo].[STORE_FILEMETADATA]",
										"storedProcedureParameters": {
											"FileName": {
												"value": {
													"value": "@item().name",
													"type": "Expression"
												},
												"type": "String"
											},
											"LastModifiedDate": {
												"value": {
													"value": "@utcnow()",
													"type": "Expression"
												},
												"type": "String"
											},
											"RecInsertDate": {
												"value": {
													"value": "@convertFromUtc(utcnow(),'Pacific Standard Time')",
													"type": "Expression"
												},
												"type": "String"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureSqlDatabase1",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					}
				],
				"folder": {
					"name": "Orchestrate-Part2-controls-pipeline"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parameterized_Copy_blob_to_DB')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Parameterized_copy_activity",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"sink": {
								"type": "AzureSqlSink",
								"preCopyScript": {
									"value": "TRUNCATE TABLE [@{pipeline().parameters.TGT_SCHEMA_NAME}].[@{pipeline().parameters.TGT_TABLE_NAME}]",
									"type": "Expression"
								},
								"disableMetricsCollection": false
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"typeConversion": true,
								"typeConversionSettings": {
									"allowDataTruncation": true,
									"treatBooleanAsNumber": false
								}
							}
						},
						"inputs": [
							{
								"referenceName": "SRC_SALES_Parameterized",
								"type": "DatasetReference",
								"parameters": {
									"SRC_Input_file": {
										"value": "@pipeline().parameters.SRC_INPUT_FILE",
										"type": "Expression"
									}
								}
							}
						],
						"outputs": [
							{
								"referenceName": "TGT_PRODUCT_PARAMETERIZED",
								"type": "DatasetReference",
								"parameters": {
									"TGT_TABLE_NAME": {
										"value": "@pipeline().parameters.TGT_TABLE_NAME",
										"type": "Expression"
									}
								}
							}
						]
					}
				],
				"parameters": {
					"SRC_INPUT_FILE": {
						"type": "string"
					},
					"TGT_TABLE_NAME": {
						"type": "string"
					},
					"TGT_SCHEMA_NAME": {
						"type": "string"
					}
				},
				"folder": {
					"name": "Parameterised_Pipelines"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline1')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Move_data_Database_to_Blob",
						"type": "Copy",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "AzureSqlSource",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"sink": {
								"type": "DelimitedTextSink",
								"storeSettings": {
									"type": "AzureBlobStorageWriteSettings"
								},
								"formatSettings": {
									"type": "DelimitedTextWriteSettings",
									"quoteAllText": true,
									"fileExtension": ".txt"
								}
							},
							"enableStaging": false,
							"translator": {
								"type": "TabularTranslator",
								"mappings": [
									{
										"source": {
											"name": "ProductID",
											"type": "Int32"
										},
										"sink": {
											"name": "ProductID",
											"type": "Int32"
										}
									},
									{
										"source": {
											"name": "Name",
											"type": "String"
										},
										"sink": {
											"name": "Name",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ProductNumber",
											"type": "String"
										},
										"sink": {
											"name": "ProductNumber",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Color",
											"type": "String"
										},
										"sink": {
											"name": "Color",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "StandardCost",
											"type": "String"
										},
										"sink": {
											"name": "StandardCost",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ListPrice",
											"type": "String"
										},
										"sink": {
											"name": "ListPrice",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Size",
											"type": "String"
										},
										"sink": {
											"name": "Size",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "Weight",
											"type": "String"
										},
										"sink": {
											"name": "Weight",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ProductCategoryID",
											"type": "String"
										},
										"sink": {
											"name": "ProductCategoryID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ProductModelID",
											"type": "String"
										},
										"sink": {
											"name": "ProductModelID",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SellStartDate",
											"type": "String"
										},
										"sink": {
											"name": "SellStartDate",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "SellEndDate",
											"type": "String"
										},
										"sink": {
											"name": "SellEndDate",
											"type": "String"
										}
									},
									{
										"source": {
											"name": "ModifiedDate",
											"type": "String"
										},
										"sink": {
											"name": "ModifiedDate",
											"type": "String"
										}
									}
								]
							}
						},
						"inputs": [
							{
								"referenceName": "Sales_dataset_Blob_to_DB",
								"type": "DatasetReference",
								"parameters": {}
							}
						],
						"outputs": [
							{
								"referenceName": "Dest_Blob_Dataset",
								"type": "DatasetReference",
								"parameters": {}
							}
						]
					}
				],
				"folder": {
					"name": "Database_to_blob"
				},
				"annotations": []
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DATATRANSFORMATION1')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "srcmoviesfile",
								"type": "DatasetReference"
							},
							"name": "mymoviescsvsrc"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TGTMOVIESRATING",
								"type": "DatasetReference"
							},
							"name": "MYMOVIESRATING"
						}
					],
					"transformations": [
						{
							"name": "FLTmymoviesdb"
						},
						{
							"name": "AGGMYMOVIESDB"
						}
					],
					"script": "source(output(\n\t\tmovie as string,\n\t\ttitle as string,\n\t\tgenres as string,\n\t\tyear as string,\n\t\tRating as string,\n\t\t{Rotton Tomato} as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> mymoviescsvsrc\nmymoviescsvsrc filter(toInteger(year) >= 1910 && toInteger(year) <= 2000 && rlike(genres, 'Comedy')) ~> FLTmymoviesdb\nFLTmymoviesdb aggregate(Avgcomedyrating = avg(toInteger(Rating))) ~> AGGMYMOVIESDB\nAGGMYMOVIESDB sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['avgratingofcomedymovies'],\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> MYMOVIESRATING"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/joiner')]",
			"type": "Microsoft.DataFactory/factories/dataflows",
			"apiVersion": "2018-06-01",
			"properties": {
				"type": "MappingDataFlow",
				"typeProperties": {
					"sources": [
						{
							"dataset": {
								"referenceName": "SRCSALES",
								"type": "DatasetReference"
							},
							"name": "SRCsalesff"
						},
						{
							"dataset": {
								"referenceName": "SalesCategory_dataset",
								"type": "DatasetReference"
							},
							"name": "SRCsalescategoryff"
						}
					],
					"sinks": [
						{
							"dataset": {
								"referenceName": "TGTMOVIESRATING",
								"type": "DatasetReference"
							},
							"name": "TGTJOINSALESANDCAT"
						}
					],
					"transformations": [
						{
							"name": "JOINSALESCATEGORY"
						}
					],
					"script": "source(output(\n\t\tProductID as string,\n\t\tName as string,\n\t\tProductNumber as string,\n\t\tColor as string,\n\t\tStandardCost as string,\n\t\tListPrice as string,\n\t\tSize as string,\n\t\tWeight as string,\n\t\tProductCategoryID as string,\n\t\tProductModelID as string,\n\t\tSellStartDate as string,\n\t\tSellEndDate as string,\n\t\tModifiedDate as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SRCsalesff\nsource(output(\n\t\tProductCategoryID as string,\n\t\tParentProductCategoryID as string,\n\t\tName as string\n\t),\n\tallowSchemaDrift: true,\n\tvalidateSchema: false,\n\tignoreNoFilesFound: false) ~> SRCsalescategoryff\nSRCsalesff, SRCsalescategoryff join(SRCsalesff@ProductCategoryID == SRCsalescategoryff@ProductCategoryID,\n\tjoinType:'inner',\n\tbroadcast: 'auto')~> JOINSALESCATEGORY\nJOINSALESCATEGORY sink(allowSchemaDrift: true,\n\tvalidateSchema: false,\n\tpartitionFileNames:['Joineroutputofsalesandcateg'],\n\tmapColumn(\n\t\tProductID,\n\t\tName = SRCsalesff@Name,\n\t\tProductNumber,\n\t\tColor,\n\t\tStandardCost,\n\t\tListPrice,\n\t\tSize,\n\t\tWeight,\n\t\tProductCategoryID = SRCsalesff@ProductCategoryID,\n\t\tProductModelID,\n\t\tSellStartDate,\n\t\tSellEndDate,\n\t\tModifiedDate,\n\t\tProductCategoryID = SRCsalescategoryff@ProductCategoryID,\n\t\tParentProductCategoryID,\n\t\tName = SRCsalescategoryff@Name\n\t),\n\tpartitionBy('hash', 1),\n\tskipDuplicateMapInputs: true,\n\tskipDuplicateMapOutputs: true) ~> TGTJOINSALESANDCAT"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/pipeline3')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "sparkclusterlookup",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "DelimitedTextSource",
								"storeSettings": {
									"type": "AzureBlobStorageReadSettings",
									"recursive": true,
									"enablePartitionDiscovery": false
								},
								"formatSettings": {
									"type": "DelimitedTextReadSettings"
								}
							},
							"dataset": {
								"referenceName": "sparkclusterdemofileparameters",
								"type": "DatasetReference",
								"parameters": {}
							}
						}
					},
					{
						"name": "SetvarforInputfilelocation",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "sparkclusterlookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "InputFileLocation",
							"value": {
								"value": "@activity('sparkclusterlookup').output.firstRow.inputFilelocation",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SetvarforOutputlocation",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "sparkclusterlookup",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"variableName": "OutputFileLocation",
							"value": {
								"value": "@activity('sparkclusterlookup').output.firstRow.outputfilelication",
								"type": "Expression"
							}
						}
					},
					{
						"name": "SparkActivityForProcessing",
						"type": "HDInsightSpark",
						"dependsOn": [
							{
								"activity": "SetvarforInputfilelocation",
								"dependencyConditions": [
									"Succeeded"
								]
							},
							{
								"activity": "SetvarforOutputlocation",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"rootPath": "sparkdemoiofiles",
							"entryFilePath": "WordCount_Spark.py",
							"arguments": [
								"@variables('InputFileLocation')",
								"@variables('OutputFileLocation')"
							],
							"getDebugInfo": "Always",
							"sparkJobLinkedService": {
								"referenceName": "sparkclusterdemofileparameters",
								"type": "LinkedServiceReference"
							}
						},
						"linkedServiceName": {
							"referenceName": "HDInsightcluster",
							"type": "LinkedServiceReference"
						}
					}
				],
				"variables": {
					"InputFileLocation": {
						"type": "String"
					},
					"OutputFileLocation": {
						"type": "String"
					}
				},
				"folder": {
					"name": "Sparkclusterdemo"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sparkclusterdemofileparameters')]",
				"[concat(variables('factoryId'), '/linkedServices/HDInsightcluster')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Data_Transformation_flow')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "Movies_avg_rating",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "DATATRANSFORMATION1",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"mymoviescsvsrc": {},
									"MYMOVIESRATING": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine",
							"runConcurrently": true
						}
					}
				],
				"folder": {
					"name": "TRANSFORMATION_PIPELINES"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/DATATRANSFORMATION1')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/JoinerDataTransformation')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "JoinDatatransfomationpipeline",
						"type": "ExecuteDataFlow",
						"dependsOn": [],
						"policy": {
							"timeout": "7.00:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"dataflow": {
								"referenceName": "joiner",
								"type": "DataFlowReference",
								"parameters": {},
								"datasetParameters": {
									"SRCsalesff": {},
									"SRCsalescategoryff": {},
									"TGTJOINSALESANDCAT": {}
								}
							},
							"staging": {},
							"compute": {
								"coreCount": 8,
								"computeType": "General"
							},
							"traceLevel": "Fine"
						}
					}
				],
				"folder": {
					"name": "JoinerDataTransformation"
				},
				"annotations": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/dataflows/joiner')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Event_Based_Trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"description": "whenever i place my source file in Directory the pipeline has to trigger automatically yes",
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "Event_based_trigger_pipeline",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "BlobEventsTrigger",
				"typeProperties": {
					"blobPathBeginsWith": "/democontainer1/blobs/",
					"blobPathEndsWith": "Sales.csv",
					"ignoreEmptyBlobs": true,
					"scope": "[parameters('Event_Based_Trigger_properties_typeProperties_scope')]",
					"events": [
						"Microsoft.Storage.BlobCreated"
					]
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Event_based_trigger_pipeline')]"
			]
		}
	]
}